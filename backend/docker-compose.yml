version: '3.8'

services:
  webagent-backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: webagent/backend:2.4.0
    container_name: webagent-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TOGETHER_API_KEY=${TOGETHER_API_KEY}
      - JWT_SECRET=${JWT_SECRET:-webagent-dev-secret}
      - LANGSMITH_API_KEY=${LANGSMITH_API_KEY}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - webagent-network
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:v2.36.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - webagent-network

  grafana:
    image: grafana/grafana:8.5.3
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=WebAgent-Admin-2025!
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    networks:
      - webagent-network
    depends_on:
      - prometheus

networks:
  webagent-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data: 